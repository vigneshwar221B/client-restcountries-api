{"version":3,"sources":["components/NavBar.js","components/Search.js","components/CardView.js","components/Result.js","App.js","reportWebVitals.js","index.js"],"names":["NavBar","Navbar","bg","variant","Brand","href","Search","props","useState","keyword","setKeyword","typeKey","setType","onSubmitHandler","a","reqUrl","baseUrl","Axios","get","data","console","log","sendBack","setShow","InputGroup","className","DropdownButton","as","Prepend","title","id","onSelect","ev","Dropdown","Item","eventKey","Divider","FormControl","placeholder","aria-label","aria-describedby","value","onChange","newKeyword","target","Append","Button","onClick","CardView","Card","style","width","minHeight","Img","src","flag","Body","Title","name","ListGroup","ListGroupItem","capital","region","subregion","timezones","population","nativeName","numericCode","Object","keys","translations","map","el","i","length","latlng","Result","resultData","result","Array","isArray","Col","App","setResult","show","styles","container","paddingTop","search","marginBottom","marginTop","justifyContent","Container","Row","Toast","onClose","delay","autohide","backgroundColor","color","gap","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4e1cb7be.chunk.js","sourcesContent":["import React from 'react'\nimport {Navbar} from 'react-bootstrap'\n\nexport default function NavBar() {\n    return (\n        <Navbar bg=\"dark\" variant=\"dark\">\n            <Navbar.Brand href=\"#home\">\n                RESTCOUNTRIESAPI VIA GRROOM\n            </Navbar.Brand>\n        </Navbar>\n    )\n}\n\n","import React, {useState} from 'react'\nimport {Button, FormControl, InputGroup, Dropdown, DropdownButton} from 'react-bootstrap'\nimport Axios from 'axios'\n\nconst Search = (props) => {\n\n    const [keyword, setKeyword] = useState('')\n    const [typeKey, setType] = useState('name')\n\n    const onchangeHandler = (newKeyword) => {\n        setKeyword(newKeyword.target.value)\n    }\n\n    const onSubmitHandler = async() => {\n        let reqUrl;\n        if(typeKey === 'all'){\n            reqUrl = `${props.baseUrl}/${typeKey}`\n        }else if(typeKey=== 'fullname'){\n            reqUrl = `${props.baseUrl}/name/${keyword}?fullText=true`\n        }else if(typeKey=== 'codes'){\n            reqUrl = `${props.baseUrl}/alpha?codes=${keyword}`\n        }else{\n            reqUrl = `${props.baseUrl}/${typeKey}/${keyword}`\n        }\n        try{\n            const data = await Axios.get(reqUrl)\n            console.log(data);\n            props.sendBack(data)\n        }catch{\n            console.log('bad request');\n            props.setShow(true)\n        }\n    }\n\n    return (\n        <div>\n            <InputGroup className=\"mb-3\">\n                <DropdownButton\n                as={InputGroup.Prepend}\n                variant=\"outline-secondary\"\n                title={typeKey}\n                id=\"input-group-dropdown-1\"\n                onSelect={(ev)=>{setType(ev)}}\n                >\n                    <Dropdown.Item href=\"#\" eventKey=\"name\">name</Dropdown.Item>\n                    <Dropdown.Item href=\"#\" eventKey=\"alpha\">code</Dropdown.Item>\n                    <Dropdown.Item href=\"#\" eventKey=\"currency\">currency</Dropdown.Item>\n                    <Dropdown.Item href=\"#\" eventKey=\"lang\">language</Dropdown.Item>\n                    <Dropdown.Item href=\"#\" eventKey=\"capital\">capital city</Dropdown.Item>\n                    <Dropdown.Item href=\"#\" eventKey=\"region\">region</Dropdown.Item>\n                    <Dropdown.Item href=\"#\" eventKey=\"regionalbloc\">regional bloc</Dropdown.Item>\n                    <Dropdown.Divider />\n                    <Dropdown.Item href=\"#\" eventKey=\"all\">list all</Dropdown.Item>\n                    <Dropdown.Item href=\"#\" eventKey=\"fullname\">Full name</Dropdown.Item>\n                    <Dropdown.Item href=\"#\" eventKey=\"codes\">list of codes: (seperate the codes by ;)</Dropdown.Item>\n                    \n                </DropdownButton>\n                <FormControl\n                placeholder={typeKey}\n                aria-label={typeKey}\n                aria-describedby=\"basic-addon2\"\n                value={keyword}\n                onChange={onchangeHandler}\n                />\n                <InputGroup.Append>\n                    <Button variant=\"outline-secondary\" onClick={onSubmitHandler}>submit</Button>\n                </InputGroup.Append>\n            </InputGroup>\n        </div>\n    )\n}\n\nexport default Search","import React from 'react'\nimport {Card, ListGroup, ListGroupItem} from 'react-bootstrap'\n\nconst CardView = (props) => {\n    return (\n            <Card style={{ width: '18rem', minHeight: '75vh' }}>\n                <Card.Img variant=\"top\" src={props.data.flag} />\n                <Card.Body>\n                    <Card.Title>{props.data.name}</Card.Title>\n                </Card.Body>\n                <ListGroup className=\"list-group-flush\">\n                    <ListGroupItem>Capital: {props.data.capital}</ListGroupItem>\n                    <ListGroupItem>Region: {props.data.region}</ListGroupItem>\n                    <ListGroupItem>Subregion: {props.data.subregion}</ListGroupItem>\n                    <ListGroupItem>TimeZone: {props.data.timezones[0]}</ListGroupItem>\n                    <ListGroupItem>Population: {props.data.population}</ListGroupItem>\n                    <ListGroupItem>Native Name: {props.data.nativeName}</ListGroupItem>\n                    <ListGroupItem>Numeric Code: {props.data.numericCode}</ListGroupItem>\n                    <ListGroupItem>Other names: {Object.keys(props.data.translations).map((el,i) => {\n                            if(i === Object.keys(props.data.translations).length -1)\n                              return el+'. '\n                            else\n                                return el + ', '\n                            })}</ListGroupItem>\n                    <ListGroupItem>Lat & Lng: {props.data.latlng[0]}, {props.data.latlng[1]}</ListGroupItem>\n                </ListGroup>\n            </Card>\n        \n    )\n}\n\nexport default CardView\n","import React from 'react'\nimport {Col} from 'react-bootstrap'\nimport CardView from './CardView'\n\nconst Result = (props) => {\n\n    const finalResult = (resultData) => {\n\n        if(resultData){\n            if(Array.isArray(resultData.data)){\n                return (<>\n                    {resultData.data.map(el => {\n                    return (\n                        <Col>\n                            <CardView data={el} />\n                        </Col>\n                        )\n                    })  \n                    }\n                    </>\n                )\n            }else{\n                return (<Col>\n                <CardView data={resultData.data} />\n            </Col>)\n            }\n        }\n        return <></>\n        \n\n    }\n\n    return (\n        <>\n            { finalResult(props.result) }\n        </>\n    )\n}\n\nexport default Result","import React, {useState} from 'react'\nimport {Container, Row, Toast, Col} from 'react-bootstrap'\n\nimport NavBar from './components/NavBar'\nimport Search from './components/Search'\nimport Result from './components/Result'\n\nimport './App.css'\n\nconst App = () => {\n  const baseUrl = \"https://restcountries.eu/rest/v2\"\n\n  const [result, setResult] = useState()\n  const [show, setShow] = useState(false);\n\n  const sendBack = (data) => {\n    setResult(data)\n  }\n\n  const styles = {\n    container: {\n      paddingTop: '20px'\n    },\n    search: {\n      marginBottom: '20px',\n      marginTop: '20px',\n      justifyContent: 'center'\n    },\n  }\n\n  return (\n    <div className=\"App\">\n      <NavBar />\n        <Container style={styles.container}>\n          <Row>\n            <Col></Col>\n            <Col>\n              <Toast onClose={() => setShow(false)} show={show} delay={3000} autohide>\n                <Toast.Body style={{backgroundColor: 'red', color: 'white'}}>\n                  We couldn't find what you're looking for :(\n                </Toast.Body>\n            </Toast>\n            </Col>\n          </Row>\n          <Row style={styles.search}>  \n              <Search baseUrl={baseUrl} sendBack={sendBack} setShow={setShow} />\n          </Row>\n          <Row style={{gap: '10px'}}>\n            <Result result={result} />\n          </Row>\n        </Container>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}